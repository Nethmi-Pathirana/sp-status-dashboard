swagger: '2.0'
info:
  version: 1.0.0
  title: Stream Processor Status Dashboard Service
  description: This provides information about the REST APIs available for WSO2 Steam Processor Status Dashboard.
  contact:
    name: WSO2
    url: 'http://wso2.com/analytics'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
schemes:
  - http
  - https
host: analytics.wso2.com
paths:
  /worker:
    post:
      x-wso2-curl: >-
        curl -k -H "Content-Type: application/json" -X POST -d @data.json
        http://localhost:9090/worker
      x-wso2-request: |-
        POST http://localhost:9090/worker
        {"name":"worker1","username":"w1","password":"**","url":"https://ip_address:port","clusterID":"1"}
      x-wso2-response: >-
        HTTP/1.1 201 OK Content-Type: application/json  {"type":"success","message":"Worker is added successfully"}
      tags:
        - worker
      summary: Add a new worker.
      description: Adds a new worker.
      operationId: addWorker
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
      parameters:
        - in: body
          name: worker
          description: Worker object that needs to be added.
          required: true
          schema:
            $ref: '#/definitions/Worker'
      responses:
        '201':
          description: Worker is added successfully.
          schema:
            $ref: '#/definitions/Worker'
        '409':
          description: A worker with the given url already exists.
        '500':
          description: An unexpected error occured.
  '/worker/{id}':
    get:
      x-wso2-curl: 'curl -k -X GET http://localhost:9090/worker/{id}'
      x-wso2-request: 'GET http://localhost:9090/worker/{id}'
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        {"name":"worker1","username":"w1","password":"**","url":"https://ip_address:port","clusterID":"1"}
      tags:
        - worker
      summary: Find worker by ID
      description: Retrieves the worker with the specified id.
      operationId: getWorkerById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the worker.
          required: true
          type: string
      responses:
        '200':
          description: The worker is successfully retrieved.
          schema:
            $ref: '#/definitions/Worker'
        '404':
          description: The worker specified is not found.
          schema:
            $ref: '#/definitions/ApiResponseMessageWithCode'
    put:
      x-wso2-curl: >-
        curl -k -H "Content-Type: application/json -X PUT -d @data.json
        http://localhost:9090/worker/{id}
      x-wso2-request: |-
        PUT http://localhost:9090/worker/{id}
        {"name":"worker1","username":"w1","password":"****","url":"https://ip_address:port","clusterID":"1"}
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        {"type":"success","message":"Worker is updated succesfully"}
      tags:
        - worker
      summary: Update an existing worker.
      description: |
        Updates the worker.
      operationId: updateWorker
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of worker that needs to be updated.
          required: true
          type: string

        - in: body
          name: worker
          description: Worker object that needs to be updated.
          required: true
          schema:
            $ref: '#/definitions/Worker'
      responses:
        '200':
          description: Successfully updated the worker.
        '404':
          description: Worker not found.
        '500':
          description: An unexpected error occured.
          schema:
            $ref: '#/definitions/ApiResponseMessageWithCode'
    delete:
      x-wso2-curl: 'curl -k -X DELETE http://localhost:9090/worker/{id}'
      x-wso2-request: 'DELETE http://localhost:9090/worker/{id}'
      x-wso2-response: HTTP/1.1 200 OK
      tags:
        - worker
      summary: Deletes a worker.
      description: >
        Removes the worker with the worker id
        specified.

        Path param of **id** determines id of the worker.
      operationId: deleteWorker
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of the worker.
          required: true
          type: string
      responses:
        '200':
          description: The worker is successfully deleted.
        '400':
          description: The worker id provided is invalid.
          schema:
            $ref: '#/definitions/ApiResponseMessageWithCode'
        '404':
          description: The worker is not found.
          schema:
            $ref: '#/definitions/ApiResponseMessageWithCode'
        '500':
          description: An unexpected error occured.
          schema:
            $ref: '#/definitions/ApiResponseMessageWithCode'
definitions:
  Worker:
    type: object
    required:
      - username
      - password
      - url
    properties:
      name:
        type: string
      username:
        type: string
      password:
        type: string
      url:
        type: string
      clusterID:
        type: integer
  ApiResponseMessageWithCode:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: Unique error code
      type:
        type: string
        description: Error type
      message:
        type: string
        description: Error message
